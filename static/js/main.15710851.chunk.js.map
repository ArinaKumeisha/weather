{"version":3,"sources":["common/Modals/Modal.module.scss","Components/Elements/Elements.module.css","Components/Elem/Elems.module.css","Components/Settings/Settings.module.scss","Bll/enum.ts","api/api.ts","Bll/weatherReducer.ts","Components/Settings/Settings.tsx","Components/Elem/Elem.tsx","common/timeConverter.ts","Components/Elements/Elements.tsx","Components/Search/Search.tsx","common/Modals/Modal.tsx","App.tsx","reportWebVitals.ts","Bll/store.ts","common/LocalStorage/LocalStorage.ts","index.tsx","common/styles/Styles.module.scss","Components/Search/Search.module.scss"],"names":["module","exports","ACTION_TYPE","api","q","axios","get","initialState","cities","error","isModal","getCityAC","obj","type","GET_CITY","setErrorAC","SET_ERROR","showModalAC","SHOW_MODAL","Settings","props","name","dispatch","useDispatch","className","s","container","onClick","city","a","res","data","id","dt","humidity","main","pressure","temp","deg","wind","speed","object","DELETE_DATA","style","btn","UPDATE_DATA","btnRed","Elem","elem","timeConverter","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","Elements","block","map","e","toFixed","Search","useName","setUseName","addHandler","existCity","some","fetch","settings","value","onChange","currentTarget","onFocus","input","placeholder","onKeyPress","key","Modal","useState","setActive","useSelector","state","weather","modal","App","setUseNName","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","filter","store","createStore","getValue","localStorage","getItem","JSON","parse","persistedState","applyMiddleware","thunkMiddleware","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15710851.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__2N80d\",\"modal\":\"Modal_modal__2vIKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Elements_block__1VvAK\",\"btn\":\"Elements_btn__2MsGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elem\":\"Elems_elem__3D6AQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Settings_container__179nZ\"};","export enum ACTION_TYPE {\r\n    GET_CITY = 'WEATHER/GET_NAME',\r\n    SET_ERROR = 'WEATHER/SET_ERROR',\r\n    UPDATE_DATA = 'WEATHER/UPDATE_DATA',\r\n    DELETE_DATA = 'WEATHER/DELETE_DATA',\r\n    SHOW_MODAL = 'WEATHER/SHOW_MODAL',\r\n}","import axios from \"axios\";\r\n\r\nexport const api = {\r\n    getRequest(q: string) {\r\n        return axios.get<GetType>(`https://api.openweathermap.org/data/2.5/weather?q=${q}&units=metric&appid=e49884ac099317c54fb2fa8c00755bf8`)\r\n    }\r\n}\r\n\r\ntype GetType = {\r\n    status: number\r\n    text: string\r\n    \"coord\": {\r\n        \"lon\": number\r\n        \"lat\": number\r\n    },\r\n    \"weather\": WeatherType[]\r\n    \"base\": string\r\n    \"main\": MainType\r\n    \"visibility\": number\r\n    \"wind\": { \"speed\": number, \"deg\": number }\r\n    \"clouds\": { \"all\": number }\r\n    \"dt\": number,\r\n    \"sys\": SysType\r\n    \"timezone\": number\r\n    \"id\": number\r\n    \"name\": string\r\n    \"cod\": number\r\n    'message': string\r\n\r\n}\r\n\r\ntype WeatherType = {\r\n    \"id\": number\r\n    \"main\": string\r\n    \"description\": string\r\n    \"icon\": string\r\n}\r\ntype MainType = {\r\n    \"temp\": number,\r\n    \"feels_like\": number,\r\n    \"temp_min\": number,\r\n    \"temp_max\": number,\r\n    \"pressure\": number,\r\n    \"humidity\": number\r\n}\r\ntype SysType = {\r\n    \"type\": number,\r\n    \"id\": number,\r\n    \"country\": string,\r\n    \"sunrise\": number,\r\n    \"sunset\": number\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {api} from \"../api/api\";\r\nimport {ACTION_TYPE} from \"./enum\";\r\n\r\n\r\nconst initialState = {\r\n    cities: [] as ObjType[],\r\n    error: '',\r\n    isModal: false,\r\n}\r\nexport type InitialStateType = typeof initialState\r\nexport const weatherReducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTION_TYPE.GET_CITY:\r\n            return {...state, cities: [action.obj, ...state.cities]}\r\n        case ACTION_TYPE.SET_ERROR:\r\n            return {...state, error: action.error}\r\n        case ACTION_TYPE.UPDATE_DATA:\r\n            return {...state, cities: state.cities.map(city => city.id === action.object.id ? {...action.object}: city)}\r\n        case ACTION_TYPE.DELETE_DATA:\r\n            return {...state, cities: state.cities.filter(city => city.id !== action.object.id)}\r\n        case ACTION_TYPE.SHOW_MODAL:\r\n            return {...state, isModal: action.isModal}\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const getCityAC = (obj: ObjType) => (\r\n    {type: ACTION_TYPE.GET_CITY, obj} as const\r\n)\r\nexport const setErrorAC = (error: string) => (\r\n    {type: ACTION_TYPE.SET_ERROR, error} as const\r\n)\r\nexport const showModalAC = (isModal: boolean) => (\r\n    {type: ACTION_TYPE.SHOW_MODAL, isModal} as const)\r\n\r\nexport type ObjType = {\r\n    name: string,\r\n    id: number,\r\n    dt: any,\r\n    humidity: number,\r\n    pressure: number,\r\n    temp: number,\r\n    deg: number,\r\n    speed: number,\r\n}\r\nexport const fetch = (cities: ObjType[], city: string) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        try {\r\n            const res = await api.getRequest(city)\r\n            const obj: ObjType = {\r\n                name: res.data.name,\r\n                id: res.data.id,\r\n                dt: res.data.dt,\r\n                humidity: res.data.main.humidity,\r\n                pressure: res.data.main.pressure,\r\n                temp: res.data.main.temp,\r\n                deg: res.data.wind.deg,\r\n                speed: res.data.wind.speed,\r\n            }\r\n            const existCity = cities.some(city => city.id === obj.id)\r\n            if (existCity) {\r\n                dispatch(setErrorAC('this city have added'))\r\n                dispatch(showModalAC(true))\r\n            } else {\r\n                dispatch(getCityAC(obj))\r\n                dispatch(showModalAC(false))\r\n            }\r\n        } catch (e: any) {\r\n            dispatch(setErrorAC('check your request please'))\r\n            dispatch(showModalAC(true))\r\n\r\n        }\r\n    }\r\n}\r\nexport const updateDataAC = (object: ObjType) =>\r\n    ({ type: ACTION_TYPE.UPDATE_DATA,object } as const)\r\nexport const deleteDataAC = (object: ObjType) =>\r\n    ({ type: ACTION_TYPE.DELETE_DATA,object } as const)\r\n\r\nexport const updateData = (city: string) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        try {\r\n            const res = await api.getRequest(city)\r\n            const obj: ObjType = {\r\n                name: res.data.name,\r\n                id: res.data.id,\r\n                dt: res.data.dt,\r\n                humidity: res.data.main.humidity,\r\n                pressure: res.data.main.pressure,\r\n                temp: res.data.main.temp,\r\n                deg: res.data.wind.deg,\r\n                speed: res.data.wind.speed,\r\n            }\r\n            dispatch(updateDataAC(obj))\r\n        }catch (e: any){\r\n        }\r\n    }\r\n}\r\nexport const deleteData = (city: string) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        try {\r\n            const res = await api.getRequest(city)\r\n            const obj: ObjType = {\r\n                name: res.data.name,\r\n                id: res.data.id,\r\n                dt: res.data.dt,\r\n                humidity: res.data.main.humidity,\r\n                pressure: res.data.main.pressure,\r\n                temp: res.data.main.temp,\r\n                deg: res.data.wind.deg,\r\n                speed: res.data.wind.speed,\r\n            }\r\n            dispatch(deleteDataAC(obj))\r\n        }catch (e: any){\r\n        }\r\n    }\r\n}\r\ntype UpdateDataType = ReturnType<typeof updateDataAC>\r\ntype SetErrorType = ReturnType<typeof setErrorAC>\r\ntype GetCityType = ReturnType<typeof getCityAC>\r\ntype DeleteType = ReturnType<typeof deleteDataAC>\r\ntype ShowModalType = ReturnType<typeof showModalAC>\r\ntype ActionType = GetCityType | SetErrorType | UpdateDataType | DeleteType | ShowModalType","import React from 'react';\r\nimport {deleteData, updateData} from \"../../Bll/weatherReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from '../../common/styles/Styles.module.scss'\r\nimport s from './Settings.module.scss'\r\n\r\ntype PropsType = {\r\n    name: string\r\n}\r\nexport const Settings = (props: PropsType) => {\r\n    const {name} = props\r\n    const dispatch = useDispatch()\r\n\r\n    const updateHandler = () => {\r\n        dispatch(updateData(name))\r\n    }\r\n\r\n    const deleteHandler = () => {\r\n        dispatch(deleteData(name))\r\n    }\r\n    return (\r\n        <div className={s.container}>\r\n            <button onClick={deleteHandler} className={style.btn}>delete</button>\r\n            <button onClick={updateHandler} className={style.btnRed}>update</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport s from './Elems.module.css'\r\nimport {ObjType} from \"../../Bll/weatherReducer\";\r\nimport {Settings} from \"../Settings/Settings\";\r\n\r\n\r\nexport const Elem = (props: ObjType) => {\r\n    const {name, temp, speed, pressure, humidity, dt, deg} = props;\r\n\r\n    return (\r\n        <div className={s.elem}>\r\n            <h2>City: <span>{name}</span></h2>\r\n            <div>Temperature:<span> {temp}ºС</span></div>\r\n            <div>Speed of wind: {speed}M/C</div>\r\n            <div>Direction of wind: {deg}º</div>\r\n            <div>Pressure: {pressure}</div>\r\n            <div>Humidity:{humidity}</div>\r\n            <div>Last update:{dt}</div>\r\n\r\n            <Settings\r\n                name={name}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","export const  timeConverter = (UNIX_timestamp: number) => {\r\n    const a = new Date(UNIX_timestamp * 1000);\r\n    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    const year = a.getFullYear();\r\n    const month = months[a.getMonth()];\r\n    const date = a.getDate();\r\n    const hour = a.getHours() < 10 ? `0${a.getHours()}` : a.getHours()\r\n    const min = a.getMinutes() < 10 ? `0${a.getMinutes()}` : a.getMinutes();\r\n    const sec = a.getSeconds() < 10 ? `0${a.getSeconds()}` : a.getSeconds();\r\n    const time = `${date}  ${month} ${year} ${hour}: ${min}: ${sec} `\r\n    return time;\r\n}","import React from 'react';\r\nimport s from './Elements.module.css'\r\nimport {Elem} from '../Elem/Elem'\r\nimport {timeConverter} from \"../../common/timeConverter\";\r\nimport {ObjType} from \"../../Bll/weatherReducer\";\r\n\r\ntype PropsType = {\r\n    cities: ObjType[]\r\n    error: string\r\n}\r\nexport const Elements = (props: PropsType) => {\r\n\r\n    const {cities} = props\r\n\r\n    // const filtered = cities.filter(c => {\r\n    //     return c.name.toLowerCase().includes(name.toLowerCase())\r\n    // })\r\n\r\n    return (\r\n        <div className={s.block}>\r\n            {cities.map((e) => {\r\n                return (\r\n                    <Elem\r\n                        key={e.id}\r\n                        name={e.name}\r\n                        pressure={e.pressure}\r\n                        humidity={e.humidity}\r\n                        deg={e.deg}\r\n                        temp={+e.temp.toFixed(1)}\r\n                        id={e.id}\r\n                        dt={timeConverter(e.dt)}\r\n                        speed={e.speed}/>)\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {fetch, ObjType, setErrorAC} from \"../../Bll/weatherReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from './Search.module.scss'\r\nimport style from '../../common/styles/Styles.module.scss'\r\n\r\n\r\ntype PropsType = {\r\n    setUseName: (name: string) => void\r\n    useName: string\r\n    cities: ObjType[]\r\n    error: string\r\n}\r\nexport const Search = (props: PropsType) => {\r\n\r\n    const {useName, setUseName, cities} = props\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const onchange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setUseName(e.currentTarget.value)\r\n        dispatch(setErrorAC(''))\r\n    }\r\n\r\n    const addHandler = () => {\r\n        dispatch(fetch(cities, useName))\r\n        setUseName('')\r\n    }\r\n    const onKeyPressHandler = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            addHandler()\r\n        }\r\n    }\r\n    return (\r\n<div className={s.container}>\r\n        <h3 className={s.name}>Weather in your city</h3>\r\n        <div className={s.settings}>\r\n\r\n            <input\r\n                value={useName}\r\n                onChange={onchange}\r\n                onFocus={() => dispatch(setErrorAC(''))}\r\n                className={s.input}\r\n                placeholder={'enter city'}\r\n                onKeyPress={onKeyPressHandler}\r\n            />\r\n\r\n            <button\r\n                onClick={addHandler}\r\n                className={style.btn}>\r\n                Add\r\n            </button>\r\n        </div>\r\n</div>\r\n    );\r\n};\r\n\r\n","import React, {useState} from 'react';\r\nimport style from './Modal.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../Bll/store\";\r\nimport {showModalAC} from \"../../Bll/weatherReducer\";\r\n\r\ntype PropsType = {\r\n    error: string\r\n}\r\nexport const Modal = (props: PropsType) => {\r\n        const {error} = props\r\n        const [active, setActive] = useState(false)\r\n        const isModal = useSelector<AppStoreType, boolean>(state => state.weather.isModal)\r\n        const dispatch = useDispatch()\r\n        const closeModalHandler = () => {\r\n            if (error) {\r\n                setActive(false)\r\n                dispatch(showModalAC(false))\r\n            }\r\n        }\r\n        return (\r\n            <div className={style.container} onClick={closeModalHandler}>\r\n                {isModal && error && <div className={style.modal}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n\r\n        );\r\n    }\r\n;\r\n\r\n","import React, {useState} from 'react';\nimport './App.module.scss';\nimport {Elements} from './Components/Elements/Elements'\nimport {Search} from \"./Components/Search/Search\";\nimport {useSelector} from \"react-redux\";\nimport {AppStoreType} from \"./Bll/store\";\nimport {ObjType} from \"./Bll/weatherReducer\";\nimport s from './App.module.scss'\nimport {Modal} from \"./common/Modals/Modal\";\n\nfunction App() {\n    const error = useSelector<AppStoreType, string>(state => state.weather.error)\n    const cities = useSelector<AppStoreType, ObjType[]>(state => state.weather.cities)\n    const [useName, setUseNName] = useState<string>('')\n  return (\n    <div className={s.app}>\n        <Search\n            useName={useName}\n            cities={cities}\n            setUseName={setUseNName}\n            error={error}\n        />\n        <Modal\n            error={error}\n         />\n      <Elements\n          cities={cities}\n          error={error}\n      />\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {weatherReducer} from \"./weatherReducer\";\r\nimport {persistedState} from \"../common/LocalStorage/LocalStorage\";\r\n\r\n\r\nexport const reducers = combineReducers({\r\n    weather: weatherReducer,\r\n})\r\n\r\n\r\nexport const store = createStore(reducers, persistedState(), applyMiddleware(thunkMiddleware))\r\n    // шаг 2 -> persistedState\r\nstore.subscribe(()=> {        // шаг 1\r\n    localStorage.setItem('elems', JSON.stringify(store.getState()))\r\n})\r\n\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>","export const persistedState = ()=> {\r\n    const getValue = localStorage.getItem('elems')\r\n    if (getValue) {\r\n        return JSON.parse(getValue)\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Bll/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Styles_btn__3Ek2Y\",\"btnRed\":\"Styles_btnRed__1eutp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__2UbK6\",\"name\":\"Search_name__2vCUL\",\"settings\":\"Search_settings__2vmHR\",\"input\":\"Search_input__1irlo\"};"],"sourceRoot":""}